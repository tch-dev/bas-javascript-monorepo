{
  "extends": "../../.common-eslintrc",
  "settings": {
    "import/core-modules": ["javascript-sdk"],
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/internal-regex": "^(assets|modules|store|uiKit)/"
  },
  "overrides": [
    {
      "files": ["**/*.ts?(x)"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "bundledDependencies": false,
            "devDependencies": [
              "**/*.test.ts",
              "**/*.test.tsx",
              "**/setupTests.ts",
              "src/**/*.stories.ts",
              "src/**/*.stories.tsx"
            ]
          }
        ],
        // TODO: change to error
        "jsx-a11y/click-events-have-key-events": "off",
        "react/no-did-update-set-state": "off",
        "react/no-children-prop": "off",
        "import/no-unresolved": "off",
        "no-plusplus": "error",
        "no-return-assign": "error",
        "no-unreachable": "error",
        "no-template-curly-in-string": "off",
        "prefer-template": "error",
        "camelcase": ["error"],
        "no-case-declarations": "error",
        "no-unused-vars": "warn",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": false
          }
        ],
        "consistent-return": "warn",
        "no-nested-ternary": "error",
        "no-underscore-dangle": "error",
        "jsx-a11y/no-noninteractive-element-interactions": "error",
        "react/prop-types": "error",
        "react/no-array-index-key": "error",
        "react/jsx-sort-props": [
          "warn",
          {
            "callbacksLast": false,
            "shorthandFirst": true,
            "ignoreCase": true,
            "reservedFirst": true
          }
        ],
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-inferrable-types": [
          "error",
          {
            "ignoreParameters": false,
            "ignoreProperties": false
          }
        ],
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "types": {
              "React.FC": {
                "message": "In favor of unification use the form \"(props: IComponentNameProp) => ReactNode\""
              }
            }
          }
        ],
        "lines-between-class-members": "off",
        "@typescript-eslint/lines-between-class-members": "off"
      }
    }
  ]
}
